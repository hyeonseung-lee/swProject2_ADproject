Software Project II  AD project
                                정태성, 이현승

목적 : 이미지 인식 기반의 번역 어플리케이션


설계

    1. google vision을 이용해서 이미지를 텍스트로 변환한다.
        - OCR ( Optical Character reader/recognition, 광학적 문자 판독장치)를 이용한다.
        - Google cloud에서 API를 받아온다.


    2. 그 텍스트를 Naver papago로 보내서 번역 후 출력한다
        - Naver Developers에서 배포중인 API를 이용한다.

            - 언어감지 API
                : 1에서 텍스트로 변환된 언어가 어떤 언어일지 모르니 언어감지 API를 이용하도록 한다.

            - 번역 방식
                : papago에는 두가지의 번역 방식이 존재한다.

                - NMT(Neural Machine Translation, 인공신경망 기반 기계번역)
                - SMT(Statistical Machine Translation, 통계 기반 기계번역)

				네이버에서 SMT 운영을 중단한 관계로, NMT를 사용하도록 한다.


    3. 출력되는 값, 설정방식 등은 pyQt를 활용해서 GUI를 제작한다.
        - 기본적으로 설정해야할 요소들을 정해야한다.
            - run / stop.
                : 사용여부를 조절할 수 있도록 해야한다.

            - 언어(To Ranguage)
                : 어떤 언어로 번역할 것인가에 대해서 설정하는 부분이다. 설정된 언어는 papago로 전달되어야 한다.
                  setting에서 바꿀 수도 있으나, 워낙 자주 설정할 것 같은 부분이기 때문에 외부로 표츌하기로 한다.

            - display
                : 번역된 언어를 보여주는 screen이다.

            - setting
                : 2에서 말했든 NMT방식과 SMT방식을 바꾸는 등의 세팅을 할 수 있도록 한다.


진행상황 12/08
	-태성
	google vision을 사용하지 않고, python 모듈 중 하나인 pytesseract 를 사용하여 OCR을 진행하도록 했다.
	기초적인 GUI를 pyQt를 활용하여 제작했다.

	-현승
	papago API를 JSON형태로 사용하여 text기반으로 intepret할 수 있는 코드를 구현했다.
	프로그램의 이름을 image 와 translator를 합성한 imagelator로 선정했다.
	naver API중 언어인식을 사용하여 입력된 텍스트의 언어를 인식하여 papago API로 전달하는 기능을 구현했다.


	* 발견된 제한사항
		papago API는 한번 번역시 5,000자의 제한이 있다. ---> 만약 이미지 하나에 글자 수가 5,000자가 넘어간다면?
		api 일일 호출 제한량이 존재한다. 조심해서 사용하자. 발표 당일에 사용이 불가해지면 안되니까..
	
	#추가적인 목표
		1. 번역 가능한 언어를 몇가지로 선정할 것인가?

	
	12월 8일 오늘, 순항중.


























